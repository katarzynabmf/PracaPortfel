// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Portfel.Data;

#nullable disable

namespace Portfel.Data.Migrations
{
    [DbContext(typeof(PortfelContext))]
    [Migration("20221129215045_Init")]
    partial class Init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Portfel.Data.Data.Aktualnosc", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("Aktywna")
                        .HasColumnType("bit");

                    b.Property<DateTime>("DataDodania")
                        .HasColumnType("datetime2");

                    b.Property<string>("FotoUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Pozycja")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("Priorytet")
                        .HasColumnType("bigint");

                    b.Property<string>("Tresc")
                        .IsRequired()
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("Tytul")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Aktualnosc");
                });

            modelBuilder.Entity("Portfel.Data.Data.Aktywo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("Aktywna")
                        .HasColumnType("bit");

                    b.Property<decimal>("CenaAktualna")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Nazwa")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Symbol")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Aktywa");
                });

            modelBuilder.Entity("Portfel.Data.Data.Konto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("Aktywna")
                        .HasColumnType("bit");

                    b.Property<double>("Gotowka")
                        .HasColumnType("float");

                    b.Property<string>("Nazwa")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UzytkownikId")
                        .HasColumnType("int");

                    b.Property<string>("Waluta")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("UzytkownikId");

                    b.ToTable("Konto");
                });

            modelBuilder.Entity("Portfel.Data.Data.KontoGotowkowe", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("Aktywna")
                        .HasColumnType("bit");

                    b.Property<int>("PortfelId")
                        .HasColumnType("int");

                    b.Property<decimal>("StanKonta")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("PortfelId")
                        .IsUnique();

                    b.ToTable("KontaGotowkowe");
                });

            modelBuilder.Entity("Portfel.Data.Data.OperacjaGotowkowa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("Aktywna")
                        .HasColumnType("bit");

                    b.Property<DateTime>("DataOperacji")
                        .HasColumnType("datetime2");

                    b.Property<int>("KontoGotowkoweId")
                        .HasColumnType("int");

                    b.Property<decimal>("Kwota")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("TypOperacjiGotowkowej")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("KontoGotowkoweId");

                    b.ToTable("OperacjaGotowkowa");
                });

            modelBuilder.Entity("Portfel.Data.Data.Portfel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("Aktywna")
                        .HasColumnType("bit");

                    b.Property<string>("Nazwa")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UzytkownikId")
                        .HasColumnType("int");

                    b.Property<string>("Waluta")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("UzytkownikId");

                    b.ToTable("Portfele");
                });

            modelBuilder.Entity("Portfel.Data.Data.Pozycja", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("Aktywna")
                        .HasColumnType("bit");

                    b.Property<int>("AktywoId")
                        .HasColumnType("int");

                    b.Property<long>("Ilosc")
                        .HasColumnType("bigint");

                    b.Property<int?>("PortfelId")
                        .HasColumnType("int");

                    b.Property<decimal>("SredniaCenaZakupu")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("AktywoId");

                    b.HasIndex("PortfelId");

                    b.ToTable("Pozycje");
                });

            modelBuilder.Entity("Portfel.Data.Data.RodzajOplaty", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("Aktywna")
                        .HasColumnType("bit");

                    b.Property<string>("Nazwa")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Promowany")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("RodzajOplaty");
                });

            modelBuilder.Entity("Portfel.Data.Data.RodzajTransakcji", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("Aktywna")
                        .HasColumnType("bit");

                    b.Property<string>("Nazwa")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("RodzajTransakcji");
                });

            modelBuilder.Entity("Portfel.Data.Data.SymbolGieldowy", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("Aktywna")
                        .HasColumnType("bit");

                    b.Property<string>("Nazwa")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Opis")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.ToTable("SymbolGieldowy");
                });

            modelBuilder.Entity("Portfel.Data.Data.Transakcja", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("Aktywna")
                        .HasColumnType("bit");

                    b.Property<DateTime>("DataUtworzenia")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("Ilosc")
                        .HasColumnType("int");

                    b.Property<int>("IloscRodzajuOplaty")
                        .HasColumnType("int");

                    b.Property<string>("Komentarz")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("KontoId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<double>("Kwota")
                        .HasColumnType("float");

                    b.Property<int?>("RodzajOplatyId")
                        .HasColumnType("int");

                    b.Property<int?>("RodzajTransakcjiId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<int?>("SymbolGieldowyId")
                        .HasColumnType("int");

                    b.Property<string>("Waluta")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("KontoId");

                    b.HasIndex("RodzajOplatyId");

                    b.HasIndex("RodzajTransakcjiId");

                    b.HasIndex("SymbolGieldowyId");

                    b.ToTable("Transakcja");
                });

            modelBuilder.Entity("Portfel.Data.Data.TransakcjaNew", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("Aktywna")
                        .HasColumnType("bit");

                    b.Property<int>("AktywoId")
                        .HasColumnType("int");

                    b.Property<decimal>("Cena")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("DataTransakcji")
                        .HasColumnType("datetime2");

                    b.Property<int>("Kierunek")
                        .HasColumnType("int");

                    b.Property<string>("Komentarz")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PortfelId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AktywoId");

                    b.HasIndex("PortfelId");

                    b.ToTable("TransakcjeNew");
                });

            modelBuilder.Entity("Portfel.Data.Data.Uzytkownik", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("Aktywna")
                        .HasColumnType("bit");

                    b.Property<DateTime>("DataUtworzenia")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Haslo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Imie")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Uzytkownik");
                });

            modelBuilder.Entity("Portfel.Data.Data.Konto", b =>
                {
                    b.HasOne("Portfel.Data.Data.Uzytkownik", "Uzytkownik")
                        .WithMany("Konto")
                        .HasForeignKey("UzytkownikId");

                    b.Navigation("Uzytkownik");
                });

            modelBuilder.Entity("Portfel.Data.Data.KontoGotowkowe", b =>
                {
                    b.HasOne("Portfel.Data.Data.Portfel", "Portfel")
                        .WithOne("KontoGotowkowe")
                        .HasForeignKey("Portfel.Data.Data.KontoGotowkowe", "PortfelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Portfel");
                });

            modelBuilder.Entity("Portfel.Data.Data.OperacjaGotowkowa", b =>
                {
                    b.HasOne("Portfel.Data.Data.KontoGotowkowe", "KontoGotowkowe")
                        .WithMany("OperacjeGotowkowe")
                        .HasForeignKey("KontoGotowkoweId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("KontoGotowkowe");
                });

            modelBuilder.Entity("Portfel.Data.Data.Portfel", b =>
                {
                    b.HasOne("Portfel.Data.Data.Uzytkownik", "Uzytkownik")
                        .WithMany("Portfele")
                        .HasForeignKey("UzytkownikId");

                    b.Navigation("Uzytkownik");
                });

            modelBuilder.Entity("Portfel.Data.Data.Pozycja", b =>
                {
                    b.HasOne("Portfel.Data.Data.Aktywo", "Aktywo")
                        .WithMany()
                        .HasForeignKey("AktywoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Portfel.Data.Data.Portfel", null)
                        .WithMany("Pozycje")
                        .HasForeignKey("PortfelId");

                    b.Navigation("Aktywo");
                });

            modelBuilder.Entity("Portfel.Data.Data.Transakcja", b =>
                {
                    b.HasOne("Portfel.Data.Data.Konto", "Konto")
                        .WithMany("Transakcje")
                        .HasForeignKey("KontoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Portfel.Data.Data.RodzajOplaty", "RodzajOplaty")
                        .WithMany("Transakcja")
                        .HasForeignKey("RodzajOplatyId");

                    b.HasOne("Portfel.Data.Data.RodzajTransakcji", "RodzajTransakcji")
                        .WithMany("Transakcja")
                        .HasForeignKey("RodzajTransakcjiId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Portfel.Data.Data.SymbolGieldowy", "SymbolGieldowy")
                        .WithMany("Transakcja")
                        .HasForeignKey("SymbolGieldowyId");

                    b.Navigation("Konto");

                    b.Navigation("RodzajOplaty");

                    b.Navigation("RodzajTransakcji");

                    b.Navigation("SymbolGieldowy");
                });

            modelBuilder.Entity("Portfel.Data.Data.TransakcjaNew", b =>
                {
                    b.HasOne("Portfel.Data.Data.Aktywo", "Aktywo")
                        .WithMany()
                        .HasForeignKey("AktywoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Portfel.Data.Data.Portfel", "Portfel")
                        .WithMany("Transakcje")
                        .HasForeignKey("PortfelId");

                    b.Navigation("Aktywo");

                    b.Navigation("Portfel");
                });

            modelBuilder.Entity("Portfel.Data.Data.Konto", b =>
                {
                    b.Navigation("Transakcje");
                });

            modelBuilder.Entity("Portfel.Data.Data.KontoGotowkowe", b =>
                {
                    b.Navigation("OperacjeGotowkowe");
                });

            modelBuilder.Entity("Portfel.Data.Data.Portfel", b =>
                {
                    b.Navigation("KontoGotowkowe")
                        .IsRequired();

                    b.Navigation("Pozycje");

                    b.Navigation("Transakcje");
                });

            modelBuilder.Entity("Portfel.Data.Data.RodzajOplaty", b =>
                {
                    b.Navigation("Transakcja");
                });

            modelBuilder.Entity("Portfel.Data.Data.RodzajTransakcji", b =>
                {
                    b.Navigation("Transakcja");
                });

            modelBuilder.Entity("Portfel.Data.Data.SymbolGieldowy", b =>
                {
                    b.Navigation("Transakcja");
                });

            modelBuilder.Entity("Portfel.Data.Data.Uzytkownik", b =>
                {
                    b.Navigation("Konto");

                    b.Navigation("Portfele");
                });
#pragma warning restore 612, 618
        }
    }
}
